{"is_source_file": true, "format": "Python", "description": "This file defines API routes related to 'agents', specifically for running an advisor and a crew workflow based on interview files stored at a specified location. It includes route handlers that interact with a repository to fetch interview text and an orchestrator to run advisor processes.", "external_files": ["../services/orchestrator", "../repositories/interview_files_repo"], "external_methods": ["orchestrator.run_advisor_on_text", "interview_files_repo.exists", "interview_files_repo.read_text"], "published": ["router"], "classes": [], "methods": [{"name": "Dict[str,Any] agent_advisor_run( patient_id: str = Query(..., description=\"Patient ID (file name without extension)\"), max_items: int = Query(3, ge=1, le=10), )", "description": "Endpoint to trigger the Advisor on interview text identified by patient_id, with error handling for missing files and exceptions.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] crew_run( patient_id: str = Query(..., description=\"Patient ID (file name without extension)\"), max_items: int = Query(3, ge=1, le=10), )", "description": "Endpoint to run a crew workflow (currently only advisor) based on interview text for a given patient_id.", "scope": "", "scopeKind": ""}], "calls": ["interview_files_repo.exists", "interview_files_repo.read_text", "orchestrator.run_advisor_on_text"], "search-terms": ["APIRouter", "interview_files_repo", "run_advisor_on_text", "agents", "advisor", "crew workflow", "patient_id"], "state": 2, "file_id": 17, "knowledge_revision": 63, "git_revision": "0e2108f3564d1a36b6b0fd9a36811e042a466914", "revision_history": [{"36": ""}, {"63": "0e2108f3564d1a36b6b0fd9a36811e042a466914"}], "ctags": [{"_type": "tag", "name": "agent_advisor_run", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/agents.py", "pattern": "/^async def agent_advisor_run($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( patient_id: str = Query(..., description=\"Patient ID (file name without extension)\"), max_items: int = Query(3, ge=1, le=10), )"}, {"_type": "tag", "name": "crew_run", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/agents.py", "pattern": "/^async def crew_run($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( patient_id: str = Query(..., description=\"Patient ID (file name without extension)\"), max_items: int = Query(3, ge=1, le=10), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/agents.py", "pattern": "/^router = APIRouter(prefix=\"\\/agents\", tags=[\"agents\"])$/", "language": "Python", "kind": "variable"}], "hash": "c87f7b6374282b8d67ec5b916a6b6057", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/routers/agents.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/agents\", tags=[\"agents\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}