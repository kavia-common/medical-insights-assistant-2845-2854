{"is_source_file": true, "format": "Python", "description": "This file defines a Python class InterviewFilesRepository that manages reading, writing, checking existence, and deleting interview text files for patients stored in a directory structure under OneDrive. It provides file system operations tailored to interview data identified by patient IDs.", "external_files": ["../core/config"], "external_methods": ["get_settings"], "published": ["interview_files_repo"], "classes": [{"name": "InterviewFilesRepository", "description": "Repository for storing and retrieving interview text as .txt files in a designated cloud-synced directory, with methods for file management."}], "methods": [{"name": "str write_text(self, patient_id: str, content: str)", "description": "Writes interview text for a specific patient to the designated folder; returns the relative path.", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"name": "str read_text(self, patient_id: str)", "description": "Reads and returns interview text for a specific patient from the file.", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"name": "bool exists(self, patient_id: str)", "description": "Checks whether a file for a patient's interview exists.", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"name": "bool delete(self, patient_id: str)", "description": "Deletes the interview file for a specific patient if it exists.", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "InterviewFilesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "str _file_path(self, patient_id: str)", "scope": "InterviewFilesRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "str _folder_path(self)", "scope": "InterviewFilesRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["os.path.join", "os.makedirs", "open", "os.path.relpath", "os.path.exists", "os.remove"], "search-terms": ["InterviewFilesRepository", "interview_files_repo", "file management", "patient_id", "OneDrive", "TXT files", "file system repository"], "state": 2, "file_id": 22, "knowledge_revision": 68, "git_revision": "b79944e2b69e2c80a64ab3970f403c02c63caa5d", "revision_history": [{"60": ""}, {"68": "b79944e2b69e2c80a64ab3970f403c02c63caa5d"}], "ctags": [{"_type": "tag", "name": "InterviewFilesRepository", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^class InterviewFilesRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_file_path", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def _file_path(self, patient_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, patient_id: str)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_folder_path", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def _folder_path(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def delete(self, patient_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, patient_id: str)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "exists", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def exists(self, patient_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, patient_id: str)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "interview_files_repo", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^interview_files_repo = InterviewFilesRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "read_text", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def read_text(self, patient_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, patient_id: str)", "scope": "InterviewFilesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "write_text", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interview_files_repo.py", "pattern": "/^    def write_text(self, patient_id: str, content: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, patient_id: str, content: str)", "scope": "InterviewFilesRepository", "scopeKind": "class"}], "hash": "ca1b134ea2b9d4ff34dd40fde190b732", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/repositories/interview_files_repo.py", "fields": [{"name": "interview_files_repo = InterviewFilesRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}]}