{"is_source_file": true, "format": "Python", "description": "This file implements an in-memory repository class `InterviewsRepository` for managing interview sessions, including creating, retrieving, listing, modifying, and deleting interview data. It uses data models such as `Interview`, `InterviewCreate`, and `ChatTurn` imported from adjacent modules.", "external_files": ["../models/schemas"], "external_methods": [], "published": ["interviews_repo"], "classes": [{"name": "InterviewsRepository", "description": "A class that provides in-memory storage and management of interview sessions and transcripts."}], "methods": [{"name": "Interview create(self, data: InterviewCreate)", "description": "Creates a new interview session with provided data and logs the creation.", "scope": "InterviewsRepository", "scopeKind": "class"}, {"name": "Optional[Interview] get(self, iid: str)", "description": "Retrieves an interview by its ID.", "scope": "InterviewsRepository", "scopeKind": "class"}, {"name": "List[Interview] list(self, patient_id: Optional[str] = None)", "description": "Lists all interviews or filters them by patient ID.", "scope": "InterviewsRepository", "scopeKind": "class"}, {"name": "Optional[Interview] add_turn(self, iid: str, role: str, content: str)", "description": "Adds a transcript turn to an existing interview identified by ID.", "scope": "InterviewsRepository", "scopeKind": "class"}, {"name": "bool delete(self, iid: str)", "description": "Deletes an interview by ID.", "scope": "InterviewsRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "InterviewsRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["uuid.uuid4", "datetime.utcnow", "interview.model_dump"], "search-terms": ["InMemory repository", "interviews_repo", "ChatTurn", "InterviewCreate", "interview sessions storage", "add_turn method", "delete interview"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "InterviewsRepository", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^class InterviewsRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "add_turn", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def add_turn(self, iid: str, role: str, content: str) -> Optional[Interview]:$/", "language": "Python", "typeref": "typename:Optional[Interview]", "kind": "member", "signature": "(self, iid: str, role: str, content: str)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def create(self, data: InterviewCreate) -> Interview:$/", "language": "Python", "typeref": "typename:Interview", "kind": "member", "signature": "(self, data: InterviewCreate)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def delete(self, iid: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, iid: str)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def get(self, iid: str) -> Optional[Interview]:$/", "language": "Python", "typeref": "typename:Optional[Interview]", "kind": "member", "signature": "(self, iid: str)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "interviews_repo", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^interviews_repo = InterviewsRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^    def list(self, patient_id: Optional[str] = None) -> List[Interview]:$/", "language": "Python", "typeref": "typename:List[Interview]", "kind": "member", "signature": "(self, patient_id: Optional[str] = None)", "scope": "InterviewsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/interviews_repo.py", "pattern": "/^log = logging.getLogger(\"app.repo.interviews\")$/", "language": "Python", "kind": "variable"}], "hash": "40c46d2b55864d52b45b8716bd4fdd66", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/repositories/interviews_repo.py", "fields": [{"name": "interviews_repo = InterviewsRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "log = logging.getLogger(\"app.repo.interviews\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"22": ""}]}