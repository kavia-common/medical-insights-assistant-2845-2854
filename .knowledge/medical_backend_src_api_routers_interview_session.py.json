{"is_source_file": true, "format": "Python", "description": "This file defines API route handlers for managing interview sessions within a medical insights application. It uses FastAPI to create routes for starting, answering, and ending interview sessions, with request models defined via Pydantic. The handlers delegate core logic to the interview_session_service.", "external_files": ["../services/interview_session_service"], "external_methods": ["interview_session_service.start_session", "interview_session_service.submit_answer", "interview_session_service.end_session"], "published": ["start_session", "submit_answer", "end_session"], "classes": [{"name": "StartSessionRequest", "description": "Request model for starting an interview session, including optional chief complaint and context."}, {"name": "AnswerRequest", "description": "Request model for submitting an answer during an interview session."}], "methods": [{"name": "Dict[str,Any] start_session( patient_id: str = Path(..., description=\"Target patient id\"), payload: StartSessionRequest = Body(default_factory=StartSessionRequest), )", "description": "API endpoint to initiate a new interview session and retrieve initial questions.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] submit_answer( patient_id: str = Path(..., description=\"Target patient id\"), payload: AnswerRequest = Body(...), )", "description": "API endpoint to submit a patient's answer and receive subsequent questions.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] end_session( patient_id: str = Path(..., description=\"Target patient id\"), )", "description": "API endpoint to conclude the interview session and save the transcript.", "scope": "", "scopeKind": ""}], "calls": ["interview_session_service.start_session", "interview_session_service.submit_answer", "interview_session_service.end_session"], "search-terms": ["FastAPI interview session", "interview_session_service", "start_session endpoint", "submit_answer endpoint", "end_session endpoint", "APIRouter", "Pydantic models", "medical backend interview API"], "state": 2, "file_id": 24, "knowledge_revision": 85, "git_revision": "0b7acc30f682b09ed36367123d650e13c34a6d56", "revision_history": [{"73": ""}, {"82": "0b7acc30f682b09ed36367123d650e13c34a6d56"}, {"85": "0b7acc30f682b09ed36367123d650e13c34a6d56"}], "ctags": [{"_type": "tag", "name": "AnswerRequest", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^class AnswerRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StartSessionRequest", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^class StartSessionRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "answer", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^    answer: str = Field(..., description=\"Patient's natural language response.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AnswerRequest", "scopeKind": "class"}, {"_type": "tag", "name": "chief_complaint", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^    chief_complaint: Optional[str] = Field(None, description=\"Chief complaint to seed interview./", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "StartSessionRequest", "scopeKind": "class"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^    context: Optional[Dict[str, Any]] = Field(default_factory=dict, description=\"Additional cont/", "language": "Python", "typeref": "typename:Optional[Dict[str, Any]]", "kind": "variable", "scope": "StartSessionRequest", "scopeKind": "class"}, {"_type": "tag", "name": "end_session", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^async def end_session($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( patient_id: str = Path(..., description=\"Target patient id\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^router = APIRouter(prefix=\"\\/interview-session\", tags=[\"interview-session\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "start_session", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^async def start_session($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( patient_id: str = Path(..., description=\"Target patient id\"), payload: StartSessionRequest = Body(default_factory=StartSessionRequest), )"}, {"_type": "tag", "name": "submit_answer", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interview_session.py", "pattern": "/^async def submit_answer($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( patient_id: str = Path(..., description=\"Target patient id\"), payload: AnswerRequest = Body(...), )"}], "hash": "e8fdf4ef72238355a4f3a32256f3bfa9", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/routers/interview_session.py", "fields": [{"name": "str answer", "scope": "AnswerRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] chief_complaint", "scope": "StartSessionRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Dict[str, Any]] context", "scope": "StartSessionRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/interview-session\", tags=[\"interview-session\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}