{"is_source_file": true, "format": "Python", "description": "This file defines a Python module for managing agent-driven interview sessions for patients, including classes for representing individual sessions and a service class for handling session lifecycle operations such as starting, submitting answers, and ending sessions. It uses in-memory storage and interacts with external components for question generation and file storage.", "external_files": ["../services/agents", "../repositories/interview_files_repo"], "external_methods": ["patient_interview_agent.next_questions", "interview_files_repo.write_text"], "published": ["interview_session_service"], "classes": [{"name": "InterviewSession", "description": "Represents a single agent-driven interview session for a patient, maintaining transcript data and providing methods for appending turns and exporting transcript text."}, {"name": "InterviewSessionService", "description": "Manages multiple in-memory interview sessions, providing methods to start, submit answers for, and end sessions, incorporating interaction with external question generation and file storage services."}], "methods": [{"name": "Dict[str,Any] start_session(self, patient_id: str, chief_complaint: Optional[str], context: Optional[Dict[str, Any]])", "description": "Begins a new interview session for a patient or continues an existing one if active, returning initial questions.", "scope": "InterviewSessionService", "scopeKind": "class"}, {"name": "Dict[str,Any] submit_answer(self, patient_id: str, answer: str)", "description": "Records a patient's answer, generates follow-up questions, and updates the session transcript.", "scope": "InterviewSessionService", "scopeKind": "class"}, {"name": "Dict[str,Any] end_session(self, patient_id: str)", "description": "Ends the active session, writes the transcript to external storage, and cleans up in-memory data.", "scope": "InterviewSessionService", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "InterviewSessionService", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, patient_id: str, chief_complaint: Optional[str] = None, context: Optional[Dict[str, Any]] = None)", "scope": "InterviewSession", "scopeKind": "class", "description": "unavailable"}, {"name": "None append_turn(self, role: str, content: str)", "scope": "InterviewSession", "scopeKind": "class", "description": "unavailable"}, {"name": "str to_text(self)", "scope": "InterviewSession", "scopeKind": "class", "description": "unavailable"}], "calls": ["patient_interview_agent.next_questions", "interview_files_repo.write_text"], "search-terms": ["InterviewSession", "interview_session_service", "patient_interview_agent", "interview_files_repo", "transcript", "agent-driven interview"], "state": 2, "file_id": 23, "knowledge_revision": 78, "git_revision": "0b7acc30f682b09ed36367123d650e13c34a6d56", "revision_history": [{"71": ""}, {"78": "0b7acc30f682b09ed36367123d650e13c34a6d56"}], "ctags": [{"_type": "tag", "name": "InterviewSession", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^class InterviewSession:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "InterviewSessionService", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^class InterviewSessionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InterviewSessionService", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    def __init__(self, patient_id: str, chief_complaint: Optional[str] = None, context: Optional/", "language": "Python", "kind": "member", "signature": "(self, patient_id: str, chief_complaint: Optional[str] = None, context: Optional[Dict[str, Any]] = None)", "scope": "InterviewSession", "scopeKind": "class"}, {"_type": "tag", "name": "append_turn", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    def append_turn(self, role: str, content: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, role: str, content: str)", "scope": "InterviewSession", "scopeKind": "class"}, {"_type": "tag", "name": "end_session", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    async def end_session(self, patient_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, patient_id: str)", "scope": "InterviewSessionService", "scopeKind": "class"}, {"_type": "tag", "name": "interview_session_service", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^interview_session_service = InterviewSessionService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^log = logging.getLogger(\"app.interview.session\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "start_session", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    async def start_session(self, patient_id: str, chief_complaint: Optional[str], context: Opti/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, patient_id: str, chief_complaint: Optional[str], context: Optional[Dict[str, Any]])", "scope": "InterviewSessionService", "scopeKind": "class"}, {"_type": "tag", "name": "submit_answer", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    async def submit_answer(self, patient_id: str, answer: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, patient_id: str, answer: str)", "scope": "InterviewSessionService", "scopeKind": "class"}, {"_type": "tag", "name": "to_text", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/interview_session_service.py", "pattern": "/^    def to_text(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "InterviewSession", "scopeKind": "class"}], "hash": "a0a2811fa0a03f4be456df21d96d5fbf", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/services/interview_session_service.py", "fields": [{"name": "interview_session_service = InterviewSessionService()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "log = logging.getLogger(\"app.interview.session\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}