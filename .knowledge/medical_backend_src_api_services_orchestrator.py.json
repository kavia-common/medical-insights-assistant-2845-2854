{"is_source_file": true, "format": "Python", "description": "This file defines the MedicalOrchestrator class responsible for managing the workflow of medical interviews and advisor suggestions in a healthcare application. It interacts with repository modules and agent components to coordinate interview steps and advising processes.", "external_files": ["../repositories/interviews_repo", ".agents"], "external_methods": ["interviews_repo.get", "interviews_repo.add_turn", "patient_interview_agent.next_questions", "medical_advisor_agent.advise"], "published": ["MedicalOrchestrator", "orchestrator"], "classes": [{"name": "MedicalOrchestrator", "description": "Class orchestrating interview and advisor workflows, including running interview steps and generating advice based on transcripts."}], "methods": [{"name": "Dict[str,Any] run_interview_step(self, interview_id: str)", "description": "Generates the next set of interview questions for a given interview ID and updates the transcript.", "scope": "MedicalOrchestrator", "scopeKind": "class"}, {"name": "Dict[str,Any] run_advisor(self, interview_id: str, max_items: int = 3)", "description": "Aggregates transcript text and requests advice, then updates the transcript with suggestions.", "scope": "MedicalOrchestrator", "scopeKind": "class"}], "calls": ["interviews_repo.get", "interviews_repo.add_turn", "patient_interview_agent.next_questions", "medical_advisor_agent.advise"], "search-terms": ["MedicalOrchestrator", "orchestrator", "run_interview_step", "run_advisor", "interview_id", "suggestions", "transcript"], "state": 2, "file_id": 14, "knowledge_revision": 45, "git_revision": "0e2108f3564d1a36b6b0fd9a36811e042a466914", "revision_history": [{"30": ""}, {"45": "0e2108f3564d1a36b6b0fd9a36811e042a466914"}], "ctags": [{"_type": "tag", "name": "MedicalOrchestrator", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/orchestrator.py", "pattern": "/^class MedicalOrchestrator:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/orchestrator.py", "pattern": "/^log = logging.getLogger(\"app.orchestrator\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "orchestrator", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/orchestrator.py", "pattern": "/^orchestrator = MedicalOrchestrator()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "run_advisor", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/orchestrator.py", "pattern": "/^    async def run_advisor(self, interview_id: str, max_items: int = 3) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, interview_id: str, max_items: int = 3)", "scope": "MedicalOrchestrator", "scopeKind": "class"}, {"_type": "tag", "name": "run_interview_step", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/orchestrator.py", "pattern": "/^    async def run_interview_step(self, interview_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, interview_id: str)", "scope": "MedicalOrchestrator", "scopeKind": "class"}], "hash": "023082db5749d435aad641529d4a171a", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/services/orchestrator.py", "fields": [{"name": "log = logging.getLogger(\"app.orchestrator\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "orchestrator = MedicalOrchestrator()", "scope": "", "scopeKind": "", "description": "unavailable"}]}