{"is_source_file": true, "format": "Python", "description": "This source file defines a Python class 'VectorDBClient' that provides an asynchronous HTTP client interface for querying a vector database, specifically via REST API calls. It includes methods for making POST requests to retrieve relevant vector search results and handles authorization via API key from configuration. The file also initializes a singleton instance of the client.", "external_files": ["../core/config"], "external_methods": ["get_settings"], "published": ["vector_client"], "classes": [{"name": "VectorDBClient", "description": "A lightweight asynchronous HTTP client to interact with a vector database for RAG (retrieval-augmented generation) queries."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the VectorDBClient with settings and an HTTPX asynchronous client.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Prepares the headers for the HTTP request, including authorization if an API key is set.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] query(self, query: str, top_k: int = 5)", "description": "Performs an asynchronous query to the vector database, returning a list of results.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "None aclose(self)", "description": "Closes the underlying HTTP client asynchronously.", "scope": "VectorDBClient", "scopeKind": "class"}], "calls": ["get_settings", "log.info", "log.exception", "self._client.post", "self._client.aclose"], "search-terms": ["VectorDBClient", "vector_client", "vector database", "RAG queries", "async HTTP client"], "state": 2, "file_id": 12, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "VectorDBClient", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^class VectorDBClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "aclose", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def aclose(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^log = logging.getLogger(\"app.rag.client\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def query(self, query: str, top_k: int = 5) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, query: str, top_k: int = 5)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "vector_client", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^vector_client = VectorDBClient()$/", "language": "Python", "kind": "variable"}], "hash": "2531956f6b483d19a431820a46664fc2", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/services/vector_client.py", "fields": [{"name": "log = logging.getLogger(\"app.rag.client\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "vector_client = VectorDBClient()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"26": ""}]}