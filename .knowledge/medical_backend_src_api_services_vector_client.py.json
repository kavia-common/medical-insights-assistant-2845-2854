{"is_source_file": true, "format": "Python", "description": "This file defines a Python class `VectorDBClient` that serves as a lightweight asynchronous HTTP client for querying a vector database used in a retrieval-augmented generation (RAG) system. It includes methods for constructing requests, handling headers with optional API key, executing queries, and closing the client connection.", "external_files": ["../core/config"], "external_methods": ["get_settings"], "published": ["vector_client"], "classes": [{"name": "VectorDBClient", "description": "A lightweight asynchronous HTTP client for interacting with a vector database used for RAG queries, supporting querying and connection management."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the VectorDBClient with settings and an asynchronous HTTP client.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Constructs HTTP headers, including authorization if API key is set.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] query(self, query: str, top_k: int = 5)", "description": "Performs an asynchronous query to the vector database and returns the list of results.", "scope": "VectorDBClient", "scopeKind": "class"}, {"name": "None aclose(self)", "description": "Closes the underlying HTTP client connection asynchronously.", "scope": "VectorDBClient", "scopeKind": "class"}], "calls": ["get_settings", "self._client.post", "self._client.aclose"], "search-terms": ["VectorDBClient", "vector_client", "vector database", "RAG queries", "async httpx", "vector query"], "state": 2, "file_id": 12, "knowledge_revision": 46, "git_revision": "0e2108f3564d1a36b6b0fd9a36811e042a466914", "revision_history": [{"26": ""}, {"46": "0e2108f3564d1a36b6b0fd9a36811e042a466914"}], "ctags": [{"_type": "tag", "name": "VectorDBClient", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^class VectorDBClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "aclose", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def aclose(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^log = logging.getLogger(\"app.rag.client\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^    async def query(self, query: str, top_k: int = 5) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, query: str, top_k: int = 5)", "scope": "VectorDBClient", "scopeKind": "class"}, {"_type": "tag", "name": "vector_client", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/services/vector_client.py", "pattern": "/^vector_client = VectorDBClient()$/", "language": "Python", "kind": "variable"}], "hash": "301298c155b7f9a57312394b268616cf", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/services/vector_client.py", "fields": [{"name": "log = logging.getLogger(\"app.rag.client\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "vector_client = VectorDBClient()", "scope": "", "scopeKind": "", "description": "unavailable"}]}