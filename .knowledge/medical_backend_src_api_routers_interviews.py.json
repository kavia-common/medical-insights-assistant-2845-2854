{"is_source_file": true, "format": "Python", "description": "This file defines API routes for interview-related operations in a FastAPI application, including creating, listing, retrieving, updating, running, and deleting interviews. It interacts with repositories and orchestrator services to manage interview sessions and their processing.", "external_files": ["../models/schemas", "../repositories/interviews_repo", "../services/orchestrator"], "external_methods": ["interviews_repo.create", "interviews_repo.list", "interviews_repo.get", "interviews_repo.add_turn", "interviews_repo.delete", "orchestrator.run_interview_step", "orchestrator.run_advisor"], "published": ["create_interview", "list_interviews", "get_interview", "add_patient_turn", "run_interview_step", "run_advisor", "delete_interview"], "classes": [], "methods": [{"name": "Interview create_interview(payload: InterviewCreate)", "description": "Creates a new interview session for a patient using provided data.", "scope": "", "scopeKind": ""}, {"name": "List[Interview] list_interviews(patient_id: str | None = None)", "description": "Retrieves a list of interviews, optionally filtered by patient ID.", "scope": "", "scopeKind": ""}, {"name": "Interview get_interview(interview_id: str)", "description": "Fetches a specific interview by its ID.", "scope": "", "scopeKind": ""}, {"name": "Interview add_patient_turn(interview_id: str, content: str = Body(..., embed=True))", "description": "Appends a patient's message to an existing interview transcript.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] run_interview_step(interview_id: str)", "description": "Executes the interview agent step to generate next interview questions asynchronously.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] run_advisor(interview_id: str, max_items: int = Query(3, ge=1, le=10))", "description": "Runs an advisor agent to generate suggestions based on the transcript asynchronously.", "scope": "", "scopeKind": ""}, {"name": "OperationStatus delete_interview(interview_id: str)", "description": "Deletes an interview session by its ID.", "scope": "", "scopeKind": ""}], "calls": ["interviews_repo.create", "interviews_repo.list", "interviews_repo.get", "interviews_repo.add_turn", "interviews_repo.delete", "orchestrator.run_interview_step", "orchestrator.run_advisor"], "search-terms": ["FastAPI interview routes", "interview CRUD", "interview orchestration", "patient turns API", "interview agent", "advisor suggestions"], "state": 2, "file_id": 16, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "add_patient_turn", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^def add_patient_turn(interview_id: str, content: str = Body(..., embed=True)) -> Interview:$/", "language": "Python", "typeref": "typename:Interview", "kind": "function", "signature": "(interview_id: str, content: str = Body(..., embed=True))"}, {"_type": "tag", "name": "create_interview", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^def create_interview(payload: InterviewCreate) -> Interview:$/", "language": "Python", "typeref": "typename:Interview", "kind": "function", "signature": "(payload: InterviewCreate)"}, {"_type": "tag", "name": "delete_interview", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^def delete_interview(interview_id: str) -> OperationStatus:$/", "language": "Python", "typeref": "typename:OperationStatus", "kind": "function", "signature": "(interview_id: str)"}, {"_type": "tag", "name": "get_interview", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^def get_interview(interview_id: str) -> Interview:$/", "language": "Python", "typeref": "typename:Interview", "kind": "function", "signature": "(interview_id: str)"}, {"_type": "tag", "name": "list_interviews", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^def list_interviews(patient_id: str | None = None) -> List[Interview]:$/", "language": "Python", "typeref": "typename:List[Interview]", "kind": "function", "signature": "(patient_id: str | None = None)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^router = APIRouter(prefix=\"\\/interviews\", tags=[\"interviews\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "run_advisor", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^async def run_advisor(interview_id: str, max_items: int = Query(3, ge=1, le=10)) -> Dict[str, An/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(interview_id: str, max_items: int = Query(3, ge=1, le=10))"}, {"_type": "tag", "name": "run_interview_step", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/routers/interviews.py", "pattern": "/^async def run_interview_step(interview_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(interview_id: str)"}], "hash": "6b13769bb011a71af6ab4396e8a2499b", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/routers/interviews.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/interviews\", tags=[\"interviews\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"34": ""}]}