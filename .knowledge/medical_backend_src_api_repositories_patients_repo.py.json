{"is_source_file": true, "format": "Python", "description": "Source file implementing an in-memory repository for patient records, including methods for create, retrieve, update, delete, and normalization of Medical Record Numbers (MRNs). It also includes a singleton repository instance.", "external_files": ["..models.schemas"], "external_methods": [], "published": ["patients_repo"], "classes": [{"name": "PatientsRepository", "description": "A simple in-memory repository class for managing patient records with MRN normalization and conflict detection."}], "methods": [{"name": "tuple[str,Optional[int]] _normalize_mrn(mrn: str)", "description": "Normalize MRN to a tuple of the original string and integer value if numeric.", "scope": "", "scopeKind": ""}, {"name": "Patient create(self, data: PatientCreate)", "description": "Create and store a new patient record, checking for MRN conflicts.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "Optional[Patient] get(self, pid: str)", "description": "Retrieve a patient by their id.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "Optional[Patient] get_by_mrn(self, mrn: str)", "description": "Retrieve a patient by MRN with normalization rules.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "List[Patient] list(self)", "description": "Return a list of all patient records.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "Optional[Patient] update(self, pid: str, changes: PatientUpdate)", "description": "Update an existing patient's information, with MRN conflict checking.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "bool delete(self, pid: str)", "description": "Remove a patient record by id.", "scope": "PatientsRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "PatientsRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "bool _mrn_conflicts(self, mrn: str)", "scope": "PatientsRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["datetime.utcnow", "uuid.uuid4", "log.info"], "search-terms": ["PatientsRepository", "MRN normalization", "patient in-memory repository", "create patient", "update patient", "get patient by MRN", "list patients"], "state": 2, "file_id": 9, "knowledge_revision": 57, "git_revision": "77de4ef4d36b4c55a4f7317dd0a384899b3ef2d4", "revision_history": [{"20": ""}, {"55": "77de4ef4d36b4c55a4f7317dd0a384899b3ef2d4"}, {"57": "77de4ef4d36b4c55a4f7317dd0a384899b3ef2d4"}], "ctags": [{"_type": "tag", "name": "PatientsRepository", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^class PatientsRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_mrn_conflicts", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def _mrn_conflicts(self, mrn: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, mrn: str)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_normalize_mrn", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^def _normalize_mrn(mrn: str) -> tuple[str, Optional[int]]:$/", "language": "Python", "typeref": "typename:tuple[str,Optional[int]]", "kind": "function", "signature": "(mrn: str)"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def create(self, data: PatientCreate) -> Patient:$/", "language": "Python", "typeref": "typename:Patient", "kind": "member", "signature": "(self, data: PatientCreate)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def delete(self, pid: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, pid: str)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def get(self, pid: str) -> Optional[Patient]:$/", "language": "Python", "typeref": "typename:Optional[Patient]", "kind": "member", "signature": "(self, pid: str)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_mrn", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def get_by_mrn(self, mrn: str) -> Optional[Patient]:$/", "language": "Python", "typeref": "typename:Optional[Patient]", "kind": "member", "signature": "(self, mrn: str)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def list(self) -> List[Patient]:$/", "language": "Python", "typeref": "typename:List[Patient]", "kind": "member", "signature": "(self)", "scope": "PatientsRepository", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^log = logging.getLogger(\"app.repo.patients\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "patients_repo", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^patients_repo = PatientsRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/medical-insights-assistant-2845-2854/medical_backend/src/api/repositories/patients_repo.py", "pattern": "/^    def update(self, pid: str, changes: PatientUpdate) -> Optional[Patient]:$/", "language": "Python", "typeref": "typename:Optional[Patient]", "kind": "member", "signature": "(self, pid: str, changes: PatientUpdate)", "scope": "PatientsRepository", "scopeKind": "class"}], "hash": "cc0a949f66c9503fc39804c98a30e52f", "format-version": 4, "code-base-name": "medical_backend", "filename": "medical_backend/src/api/repositories/patients_repo.py", "fields": [{"name": "log = logging.getLogger(\"app.repo.patients\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "patients_repo = PatientsRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}]}